[tool.poetry]
name = "nebokrai"
version = "0.1.0"
description = "Python tool for planning, prioritizing, and tracking. Designed by me, for me, to be an all-in-one way to stay organized and keep a long-range view of my goals."
authors = ["Isaac Riley <isaac.r.riley@gmail.com>"]
license = "GPL3"
readme = "README.md"

[tool.poetry.dependencies]
python = "3.11.6"

[tool.poetry.group.dev.dependencies]
ipython = "8.15.0"
mypy = "1.5.1"
black = "23.9.1"
isort = "5.12.0"
pytest = "7.4.3"
pydeps = "1.12.17"
pylint = "3.0.1"
flake8 = "6.1.0"
pyproject-flake8 = "6.1.0"
ansi2html = "1.8.0"
coverage = "7.3.1"
pytest-cov = "4.1.0"
jsonschema = "4.19.0"
types-jsonschema = "4.19.0.4"
rpds-py = "0.10.3"

[tool.poetry.scripts]
nebokrai = "nebokrai.__main__:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
exclude = ['old', '.venv']

[tool.black]
target-version = ["py310"]
line-length = 100

[tool.pylint]
disable = [
    "C0114",
    "C0325",
    "R0801", # in practice: toggle on and off, but usually annoying and not in line with what I want
    "R0902", 
    "R0903", 
    "R0904", 
    "R0913", 
    "R0914", 
    "W0511"
]
no-docstring-rgx = "^_|copy|from_string|fromordinal|today|get_task|get_project|get_arg_parser|main|parse_|.*?Raw|.*?Parsed"
docstring-min-length = 3
ignored-argument-names = "_.*|^ignored_|^unused_|arg_namespace"

[tool.isort]
profile = "black"

[tool.flake8]
max-line-length = 100
ignore = [
    "E203", # whitespace before ':'
    "W503", # line break before binary operator
]

[tool.ruff]
line-length = 100

[tool.pytest.ini_options]
testpaths = "test"
python_classes = "*Test"
addopts = ["--cov=nebokrai", "--cov-report", "html", "--cov-report", "term"]

[tool.coverage.run]
dynamic_context = "test_function"

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
]

# ignore_errors = true

[tool.coverage.html] # https://coverage.readthedocs.io/en/7.3.2/config.html
# directory = "coverage_html_report"
# extra_css = ""
show_contexts = true
# skip_covered = true
skip_empty = true
# title = ""
